{"version":3,"sources":["components/NewsItem.js","components/NewsList.js","lib/usePromise.js","components/Categories.js","pages/NewsPage.js","App.js","reportWebVitals.js","index.js"],"names":["NewsItemBlock","styled","div","NewsItem","article","title","description","url","urlToImage","className","href","target","rel","src","alt","NewsListBlock","NewsList","category","promiseCreator","deps","useState","loading","setLoading","resolved","setResolved","error","setError","useEffect","a","console","log","process","usePromise","query","axios","get","response","articles","data","map","categories","name","text","CategoriesBlock","Category","NavLink","Categories","c","activeClassName","exact","to","NewsPage","match","params","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b10fb98d.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst NewsItemBlock = styled.div`\r\n    display: flex;\r\n    .thumbnail {\r\n        margin-right: 1rem;\r\n        img {\r\n            display: block;\r\n            width: 160px;\r\n            height: 100px;\r\n            object-fit: cover;\r\n        }\r\n    }\r\n    .content {\r\n        h2 {\r\n            margin: 0;\r\n            a {\r\n                color: black;\r\n            }\r\n        }\r\n        p{\r\n            margin : 0;\r\n            line-height: 1.5;\r\n            margin-top: 0.5rem;\r\n            white-space: normal;\r\n        }\r\n    }\r\n    & + & {\r\n        margin-top: 3rem;\r\n    }\r\n    `;\r\n\r\n// {\r\n//     \"status\": \"ok\",\r\n//     \"totalResults\": 22,\r\n//     \"articles\": [\r\n//       {\r\n//         \"source\": {\r\n//           \"id\": null,\r\n//           \"name\": \"Slist.kr\"\r\n//         },\r\n//         \"author\": null,\r\n//         \"title\": \"양준혁♥박현선, 결혼식 사진 공개 '행복하게 잘 살겠습니다' - 싱글리스트\",\r\n//         \"description\": \"전 야구선수 양준혁이 결혼 소감을 전했다.\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t15일 양준혁은 자신의 SNS에 \\\"제가 드디어 유부남이 됐습니다\\\"라며 결혼...\",\r\n//         \"url\": \"http://www.slist.kr/news/articleView.html?idxno=234405\",\r\n//         \"urlToImage\": \"http://www.slist.kr/news/photo/202103/234405_394202_1414.jpg\",\r\n//         \"publishedAt\": \"2021-03-15T02:13:44Z\",\r\n//         \"content\": \"<table><tr><td></td></tr><table><tr><td></td></tr></table><table><tr><td> .\\r\\n15 SNS \\\" \\\" .\\r\\n\\\" \\\" \\\" . \\\" .\\r\\n \\\" \\\" .\\r\\n19 . 12 19 13 . \\r\\nKBS2 ' 2' .\\r\\n  kways123@slist.kr\\r\\n&lt; © , &gt;\\r\\n</td><td></td><td></… [+38 chars]\"\r\n//       },\r\n//     }\r\n// }\r\n\r\nconst NewsItem = ( {article} ) => {\r\n    const { title, description, url, urlToImage } = article;\r\n    return (\r\n        <NewsItemBlock>\r\n            {urlToImage && (\r\n                <div className=\"thumbnail\">\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img src={urlToImage} alt=\"thumbnail\"/>\r\n                    </a>\r\n                </div>\r\n            )}\r\n            <div className=\"contents\">\r\n                <h2>\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {title}\r\n                    </a>\r\n                </h2>\r\n                <p>{description}</p>\r\n            </div>    \r\n        </NewsItemBlock>\r\n    );\r\n};\r\n\r\n\r\nexport default NewsItem;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport NewsItem from './NewsItem';\r\nimport usePromise from '../lib/usePromise';\r\n\r\nconst NewsListBlock = styled.div`\r\n    box-sizing: border-box;\r\n    padding-bottom: 3rem;\r\n    width: 768px;\r\n    margin: 0 auto;\r\n    margin-top: 2rem;\r\n    @media screen and (max-width: 768px) {\r\n        width: 100%;\r\n        padding-left: 1rem;\r\n        padding-right: 1rem;\r\n    }\r\n`;\r\n\r\nconst NewsList = ({ category }) => {\r\n    // router 로 구현하기\r\n    // const [articles, setArticles] = useState(null);\r\n    // const [loading, setLoading] = useState(false);\r\n\r\n    //커스텀 hooks 만들어 구현한기 (usePromise)\r\n    const [loading, response, error] = usePromise(() => {\r\n        const query = category === 'all' ? '' : `&category=${category}`; //아래 주소로 들어가기 위한 query문\r\n        return axios.get(\r\n            `http://newsapi.org/v2/top-headlines?country=kr${query}&apiKey=87adf8cd864b4d4e914cb9d92302b635`,\r\n        );\r\n    }, [category]);\r\n\r\n    //대기중일때\r\n    if (loading) {\r\n        return <NewsListBlock>대기중...</NewsListBlock>;\r\n    }\r\n\r\n    //아직 articles 값이 설정되지 않았을 때\r\n    if (!response) {\r\n        return null;\r\n    }\r\n\r\n    if (error) {\r\n        return <NewsListBlock>에러발생 ! </NewsListBlock>;\r\n    }\r\n\r\n    //ariticles 값이 유효 할때\r\n    const { articles } = response.data;\r\n    return (\r\n        <NewsListBlock>\r\n            {articles.map((article) => (\r\n                <NewsItem key={article.url} article={article} />\r\n            ))}\r\n        </NewsListBlock>\r\n    );\r\n};\r\n\r\nexport default NewsList;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect } from 'react';\r\n\r\n//usePromise 는 NewsList 의 usePromise( () => {promiseCreator}, [deps = category]) 이다 !!!!!\r\n// promiseCreator 는 NewsList의 usePromise 내에서 리턴 값을 의미한다. 그리고 deps 는 카테고리 값을 의미한다 !!!!\r\nexport default function usePromise(promiseCreator, deps) {\r\n    //대기 중 , 완료, 실패에 대한 상태 관리\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [resolved, setResolved] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //process 정의\r\n        const process = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const resolved = await promiseCreator(); //promiseCreator 는 NewsList에서의 axios.get 의 결과값 !\r\n                setResolved(resolved); //위에서 변수에 넣어주더라도 setResolved를 통해야만 불변성에 의해 변화를 인지한다.\r\n                console.log('resolved', resolved);\r\n                console.log('deps', deps);\r\n            } catch (e) {\r\n                console.log(e);\r\n                setError(e);\r\n            }\r\n            setLoading(false);\r\n        };\r\n        //process 선언과 동시에 실행\r\n        process();\r\n    }, deps); //deps 는 NewsList 에서 usePromise()의 두번째 파라미터인 category 이다 !\r\n\r\n    return [loading, resolved, error];\r\n}\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst categories = [\r\n    {\r\n        name: 'all',\r\n        text: '전체보기',\r\n    },\r\n    {\r\n        name: 'business',\r\n        text: '비즈니스',\r\n    },\r\n    {\r\n        name: 'entertainment',\r\n        text: '엔터테인먼트',\r\n    },\r\n    {\r\n        name: 'health',\r\n        text: '건강',\r\n    },\r\n    {\r\n        name: 'science',\r\n        text: '과학',\r\n    },\r\n    {\r\n        name: 'sports',\r\n        text: '스포츠',\r\n    },\r\n    {\r\n        name: 'technology',\r\n        text: '기술',\r\n    },\r\n];\r\n\r\nconst CategoriesBlock = styled.div`\r\n    display: flex;\r\n    padding: 1rem;\r\n    width: 768px;\r\n    margin: 0 auto;\r\n    @media screen and (max-width: 768px) {\r\n        width: 100%;\r\n        overflow-x: auto;\r\n    }\r\n`;\r\n\r\nconst Category = styled(NavLink)`\r\n    font-size: 1.125rem;\r\n    cursor: pointer;\r\n    white-space: pre;\r\n    text-decoration: none;\r\n    color: inherit;\r\n    padding-bottom: 0.25rem;\r\n\r\n    &:hover {\r\n        color: #495057;\r\n    }\r\n\r\n    &.active {\r\n        font-weight: 600;\r\n        border-bottom: 2px solid #22b8cf;\r\n        color: #22b8cf;\r\n        &:hover {\r\n            color: #3bc9db;\r\n        }\r\n    }\r\n\r\n    & + & {\r\n        margin-left: 1rem;\r\n    }\r\n`;\r\n\r\nconst Categories = () => {\r\n    return (\r\n        <CategoriesBlock>\r\n            {categories.map((c) => (\r\n                <Category\r\n                    key={c.name}\r\n                    activeClassName=\"active\" //NavLink 이기 떄문에 active되면 자동으로 본 props가 활성화 된다.\r\n                    exact={c.name === 'all'}\r\n                    to={c.name === 'all' ? '/' : `/${c.name}`}\r\n                >\r\n                    {c.text}\r\n                </Category>\r\n            ))}\r\n        </CategoriesBlock>\r\n    );\r\n};\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\nimport Categories from '../components/Categories';\r\nimport NewsList from '../components/NewsList';\r\n\r\nconst NewsPage = ({ match }) => {\r\n    //카테고리가 선택되지 않았으면 기본값 all로 사용\r\n    console.log(match);\r\n    const category = match.params.category || 'all'; //category 가 null값이면 all\r\n    return (\r\n        <>\r\n            {/* Categories 가 NavLink역할   */}\r\n            <Categories />\r\n            <NewsList category={category} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewsPage;\r\n","import React,{ useState, useCallback } from 'react';\nimport axios from 'axios';\nimport NewsList from './components/NewsList';\nimport Categories from './components/Categories';\nimport NewsPage from './pages/NewsPage';\nimport {Route} from 'react-router-dom';\n\nconst App = () => {\n  //state로 카테고리 관리할때 \n  // const [category, setCategory] = useState('all');\n  // const onSelect = useCallback(\n  //   category => {\n  //     console.log('app=', category);\n  //     setCategory(category)\n  //   },\n  //   [],\n  // )\n  \n  // return (\n  //   <>\n  //     <Categories category={category} onSelect={onSelect}/>\n  //     <NewsList category={category}/>\n  //   </>\n  // )\n\n  //react router로 연결할 때 \n  return <Route path = \"/:category?\" component={NewsPage}/>;\n}\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}